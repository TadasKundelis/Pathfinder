{"version":3,"sources":["webpack:///webpack/bootstrap cb74d8b8e0dd75a75497","webpack:///./js/constants.js","webpack:///./js/domCache.js","webpack:///./js/drawClass.js","webpack:///./js/main.js","webpack:///./js/gridClass.js","webpack:///./js/tileClass.js","webpack:///./js/mazeClass.js","webpack:///./js/pathfinderClass.js","webpack:///./js/mouseEvents.js","webpack:///./js/utilityFunctions.js","webpack:///./js/astarClass.js"],"names":["tileH","tileW","numberOfRows","numberOfCols","canvas","document","getElementById","ctx","getContext","createBtn","findPathBtn","resetBtn","clearBtn","clearWallsBtn","drawRectangle","startSquareColor","finishSquareColor","wallSquareColor","emptySquareColor","pathSquareColor","width","height","x","y","state","fillStyle","beginPath","rect","closePath","fill","require","grid","init","maze","pathFinder","mouse","addEventListener","generate","exec","reset","clearPath","clearWalls","event","down","up","Grid","row","col","draw","setStart","setFinish","getRandomCoords","accumulatedCost","available","Math","floor","random","coordinates","filter","map","obj","currentTile","Tile","inTheList","initialCost","totalCost","parent","undefined","Maze","gridInstance","start","curTile","randomNeighbor","tileInBetween","stack","neighbors","fillWithWalls","selectMazeStart","push","length","slice","getNeighbors","selectRandomNeighbor","handleTileInBetween","pop","visited","tile","rnd","br","bc","PathFinder","findStart","finish","findFinish","astar","linkedList","displayPath","counter","forEach","setTimeout","duration","MouseEvents","mouseMoveWrapper","e","move","moveSource","previousRow","previousCol","window","pageX","offsetLeft","pageY","offsetTop","isEventTarget","previousTile","removeEventListener","disableButtons","enableButtons","buttons","querySelectorAll","i","setAttribute","removeAttribute","Astar","openList","pathFound","selectedTile","selectedTileIndex","findTileWithLowestCost","updateNeighbors","splice","alert","abs","lowestCost","k","neighbor","createLinkedList","node","unshift"],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cb74d8b8e0dd75a75497","export const tileH = 20; // cell height\r\nexport const tileW = 20; // cell width\r\nexport const numberOfRows = 21;\r\nexport const numberOfCols = 45; \r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/constants.js"," export const canvas =  document.getElementById('myCanvas');\r\n export const ctx = canvas.getContext('2d')\r\n export const createBtn = document.getElementById('create');\r\n export const findPathBtn = document.getElementById('pathFinder');\r\n export const resetBtn = document.getElementById('reset');\r\n export const clearBtn = document.getElementById('clearPath');\r\n export const clearWallsBtn = document.getElementById('clearWalls');\r\n \r\n\r\n \r\n \n\n\n// WEBPACK FOOTER //\n// ./js/domCache.js","import {tileH} from './constants'\r\nimport {tileW} from './constants'\r\nimport {numberOfRows} from './constants'\r\nimport {numberOfCols} from './constants'\r\nimport {canvas} from './domCache'\r\nimport {ctx} from './domCache'\r\nimport styles from '../css/maze.scss'\r\n\r\nconst startSquareColor = styles.startSquareColor;\r\nconst finishSquareColor = styles.finishSquareColor;\r\nconst wallSquareColor = styles.wallSquareColor;\r\nconst emptySquareColor = styles.emptySquareColor;\r\nconst pathSquareColor = styles.pathSquareColor;\r\n\r\n\r\ncanvas.width = (tileW + 1) * numberOfCols - 1\r\ncanvas.height = (tileH + 1) * numberOfRows - 1\r\n\r\nexport function drawRectangle(x, y, state){\r\n  if (state === 'start') ctx.fillStyle = startSquareColor;\r\n  else if (state === 'finish') ctx.fillStyle = finishSquareColor;\r\n  else if (state === 'wall') ctx.fillStyle = wallSquareColor;\r\n  else if (state === 'path') ctx.fillStyle = pathSquareColor;\r\n  else ctx.fillStyle = emptySquareColor;\r\n  ctx.beginPath();\r\n  ctx.rect(x, y, tileW, tileH);\r\n  ctx.closePath();\r\n  ctx.fill();\r\n}\n\n\n// WEBPACK FOOTER //\n// ./js/drawClass.js","require('../css/maze.scss')\r\nimport Grid from './gridClass'\r\nimport Maze from './mazeClass'\r\nimport PathFinder from './pathfinderClass'\r\nimport MouseEvents from './mouseEvents'\r\nimport {createBtn} from './domCache'\r\nimport {findPathBtn} from './domCache'\r\nimport {resetBtn} from './domCache'\r\nimport {clearBtn} from './domCache'\r\nimport {clearWallsBtn} from './domCache'\r\nimport {canvas} from './domCache'\r\n\r\nconst grid = new Grid();\r\ngrid.init();\r\nconst maze = new Maze(grid);\r\nconst pathFinder = new PathFinder(grid);\r\nconst mouse = new MouseEvents(grid)\r\n\r\n\r\ncreateBtn.addEventListener('click', () => maze.generate())\r\nfindPathBtn.addEventListener('click', () => pathFinder.exec())\r\nresetBtn.addEventListener('click', () => grid.reset())\r\nclearBtn.addEventListener('click', () => pathFinder.clearPath())\r\nclearWallsBtn.addEventListener('click', () => grid.clearWalls())\r\ncanvas.addEventListener('mousedown', (event) => mouse.down(event))\r\ncanvas.addEventListener('mouseup', () => mouse.up())\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/main.js","import {tileH} from './constants'\r\nimport {tileW} from './constants'\r\nimport {numberOfRows} from './constants'\r\nimport {numberOfCols} from './constants'\r\nimport Tile from './tileClass'\r\n\r\n\r\n\r\nexport default class Grid {\r\n  constructor() {\r\n\t  this.grid = []\r\n  }\r\n  \r\n  init() {\r\n    for (let row = 0; row < numberOfRows; row++) {\r\n      this.grid[row] = [];\r\n      for (let col = 0; col < numberOfCols; col++) {\r\n        let x = col * (tileW + 1) //get x coordinate pixel for canvas draw; add 1 to have a border\r\n        let y = row * (tileH + 1) // same for y\r\n        this.grid[row][col] = new Tile (x, y, 'empty', row, col) // assign Tile object to every matrix cell\r\n        this.grid[row][col].draw() // draw the tile\r\n      }\r\n    }\r\n    this.setStart();\r\n    this.setFinish();\r\n  }\r\n\r\n  reset() {\r\n    for (let row = 0; row < numberOfRows; row++) {\r\n      for (let col = 0; col < numberOfCols; col++) {\r\n        this.grid[row][col].reset()\r\n      }\r\n    }\r\n    this.setStart();\r\n    this.setFinish();\t\r\n  }\r\n\r\n  setStart() {\r\n    let [row, col] = this.getRandomCoords()\r\n    this.grid[row][col].draw('start')\r\n    this.grid[row][col].state = 'start'\r\n    this.grid[row][col].accumulatedCost = 1; \r\n    this.grid[row][col].available = false; // start node can not be chosen again\r\n  }\r\n\r\n  setFinish() {\r\n    let [row, col] = this.getRandomCoords();\r\n    this.grid[row][col].draw('finish')\r\n    this.grid[row][col].state = 'finish'\r\n  }\r\n\r\n  getRandomCoords(){\r\n    let row, col;\r\n    row = Math.floor(Math.random() * numberOfRows)\r\n    col = Math.floor(Math.random() * numberOfCols)\r\n    while (row % 2 || col % 2 || this.grid[row][col].state === 'start') {\r\n      row = Math.floor(Math.random() * numberOfRows)\r\n      col = Math.floor(Math.random() * numberOfCols)\r\n    }\r\n    return [row, col]\r\n  }\r\n\r\n  getNeighbors(row, col) {\r\n    let coordinates = [[row + 1, col], [row, col + 1], [row - 1, col], [row, col - 1]]; // get all the coordinates around the current tile\r\n    coordinates = coordinates.filter(([row, col]) => row > -1 && row < numberOfRows && col > -1 && col < numberOfCols) //check if coordinates are inside the canvas\r\n    return coordinates.map(([row, col]) => this.grid[row][col]).filter(obj => obj.available && obj.state != 'wall') // check if tile is available/not a wall\r\n  }\r\n\r\n  clearWalls() {\r\n    for (let row = 0; row < numberOfRows; row++) {\r\n      for (let col = 0; col < numberOfCols; col++) {\r\n        let currentTile = this.grid[row][col];\r\n        if (currentTile.state === 'wall') {\r\n          currentTile.reset();\r\n          currentTile.draw();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/gridClass.js","import {drawRectangle} from './drawClass'\r\n\r\nexport default class Tile {\r\n  constructor(x, y, state, row, col){\r\n    this.x = x; // X coordinate pixelwise\r\n    this.y = y; // Y coordinate pixelwise\r\n    this.state = state;\r\n    this.row = row; //row in the matrix\r\n    this.col = col //col in the matrix\r\n    this.available = true;\r\n    this.inTheList = false;\r\n    this.initialCost = 0;\r\n    this.accumulatedCost = 0;\r\n    this.totalCost;\r\n    this.parent;\r\n  }\r\n  \r\n  draw(state = 'empty') {\r\n    drawRectangle(this.x, this.y, state)\r\n  }\r\n\r\n  reset(state = 'empty') {\r\n    this.state = state;\r\n    this.initialCost = 0;\r\n    this.accumulatedCost = 0;\r\n    this.totalCost = undefined;\r\n    this.inTheList = false\r\n    this.available = true\r\n    this.parent = undefined\r\n    this.draw(this.state)\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/tileClass.js","import {tileH} from './constants'\r\nimport {tileW} from './constants'\r\nimport {numberOfRows} from './constants'\r\nimport {numberOfCols} from './constants'\r\n\r\n/*\r\nThis is maze generator class using traditional depth-first-search approach. Walls are as thick as empty spaces. It works as follows: \r\n1. Fill grid with walls\r\n2. Select random square with even column and row coordinates if it is a wall and make it an empty space. Push it onto stack.\r\n3. Get all the neighbors of the current square. Since walls are as thick as empty spaces, we need to add/subtract 2 to the current matrix indices.\r\nOtherwise we would fill the entire grid with empty spaces.\r\n4. If there are no available neighbors, backtrack and take the last square off the stack.\r\n5. If the stack is empty, we're done.\r\n*/\r\n\r\nexport default class Maze {\r\n  constructor(gridInstance){\r\n    this.gridInstance = gridInstance;\r\n    this.grid = gridInstance.grid;\r\n    this.start;\r\n    this.curTile;\r\n    this.randomNeighbor;\r\n    this.tileInBetween;\r\n    this.stack = [];\r\n  }\r\n\r\n  generate() {\r\n    let neighbors;\r\n    this.fillWithWalls();\r\n    this.selectMazeStart()\r\n    this.stack.push(this.start);\r\n    while (this.stack.length) {\r\n      this.curTile = this.curTile || this.stack.slice(-1)[0]\r\n      neighbors = this.getNeighbors(this.curTile.row, this.curTile.col)\r\n      if (neighbors.length) {\r\n        this.selectRandomNeighbor(neighbors);\r\n        this.handleTileInBetween();\r\n      } else {\r\n        this.curTile = this.stack.pop()\r\n      }\r\n    }\r\n    this.gridInstance.setFinish()  \r\n    this.gridInstance.setStart()\r\n  }\r\n\r\n  fillWithWalls() {\r\n    for (let row = 0; row < numberOfRows; row++) {\r\n      for (let col = 0; col < numberOfCols; col++) {\r\n        this.grid[row][col].reset('wall');\r\n        this.grid[row][col].visited = false\r\n      }\r\n    }\r\n  }\r\n\r\n  selectMazeStart() {\r\n    let [row, col] = this.gridInstance.getRandomCoords();\r\n    this.start = this.grid[row][col]\r\n    this.start.draw()\r\n    this.start.visited = true;\r\n  }\r\n\r\n  getNeighbors(row, col){\r\n    let coordinates = [[row + 2, col], [row, col + 2], [row - 2, col], [row, col - 2]];\r\n    return coordinates\r\n             .filter(([row, col]) => row > -1 && row < numberOfRows && col > -1 && col < numberOfCols) // check if both row and column are within the limits of the grid\r\n             .map(([row, col]) => this.grid[row][col]).filter(tile => !tile.visited) // check if tile has not been visited\r\n  }\r\n\r\n  selectRandomNeighbor(neighbors) {\r\n    let rnd;\r\n    rnd = Math.floor(Math.random() * neighbors.length)\r\n    this.randomNeighbor = neighbors[rnd]\r\n    this.randomNeighbor.draw()\r\n    this.randomNeighbor.state = 'empty'; \r\n  }\r\n  \r\n  /* with each step we clear three walls: selected square, it's neighbor, and the square in between. \r\n  The following function finds which square is the square in between. \r\n  */\r\n  handleTileInBetween(){\r\n    let br, bc;  //indices of the square in between\r\n    \r\n    br = this.curTile.row < this.randomNeighbor.row ? this.curTile.row + 1 : \r\n         this.curTile.row > this.randomNeighbor.row ? this.curTile.row - 1 :\r\n         this.curTile.row\r\n    \r\n    bc = this.curTile.col < this.randomNeighbor.col ? this.curTile.col + 1 : \r\n         this.curTile.col > this.randomNeighbor.col ? this.curTile.col - 1 :\r\n         this.curTile.col\r\n    \r\n    this.tileInBetween = this.grid[br][bc];\r\n    this.tileInBetween.draw();\r\n    this.tileInBetween.state = 'empty';\r\n    this.randomNeighbor.visited = true;\r\n    this.stack.push(this.randomNeighbor)\r\n  }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/mazeClass.js","import {tileH} from './constants'\r\nimport {tileW} from './constants'\r\nimport {numberOfRows} from './constants'\r\nimport {numberOfCols} from './constants'\r\nimport Astar from './astarClass'\r\nimport {enableButtons} from './utilityFunctions'\r\nimport {disableButtons} from './utilityFunctions'\r\n\r\n//PathFinder class finds start and finish nodes, passes them to the A star algorithm class, and, in case of success, displays the path.\r\n\r\nexport default class PathFinder{\r\n  constructor(gridInstance){\r\n    this.gridInstance = gridInstance; //reference to Grid object methods\r\n    this.grid = gridInstance.grid; // the actual matrix of the Grid object\r\n  }\r\n\r\n  exec(){\r\n    this.clearPath();  \r\n    let start = this.findStart()\r\n    let finish = this.findFinish()\r\n    let astar = new Astar(this.gridInstance, start, finish)\r\n    astar.exec();\r\n    if (astar.linkedList) {\r\n      this.displayPath(astar.linkedList)\r\n    }\r\n  }\r\n\r\n  findStart(){\r\n    for (let row  = 0; row < numberOfRows; row++) {\r\n      for (let col = 0; col < numberOfCols; col++) {\r\n        if (this.grid[row][col].state === 'start') {\r\n          return this.grid[row][col]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  findFinish(){\r\n    for (let row  = 0; row < numberOfRows; row++) {\r\n      for (let col = 0; col < numberOfCols; col++) {\r\n        if (this.grid[row][col].state === 'finish') {\r\n          return this.grid[row][col]\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  displayPath(linkedList) {\r\n    var counter = 0;\r\n    disableButtons() // disable the buttons so the user does not interfere while program displays the path\r\n    linkedList.forEach(tile => {\r\n      (function(counter) {\r\n        setTimeout(function() {\r\n          tile.draw('path')\r\n        }, 50 * counter)\r\n      })(counter++)\r\n    })\r\n    let duration = counter * 50 //duration is the time needed to display the path (50ms for each square)\r\n    setTimeout(enableButtons, duration) // renable buttons after the path has been displayed\r\n  }\r\n\r\n  clearPath(){\r\n    for (let row = 0; row < numberOfRows; row++) {\r\n      for (let col = 0; col  < numberOfCols; col++) {\r\n        let state = this.grid[row][col].state;\r\n        if (state === 'path' || state === 'empty' || state === 'finish') {\r\n          if (state === 'finish') {\r\n            this.grid[row][col].reset('finish');\r\n          } else {\r\n            this.grid[row][col].reset();\r\n          }\r\n        }\r\n      }\r\n    }  \r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n \r\n\n\n\n// WEBPACK FOOTER //\n// ./js/pathfinderClass.js","import {tileH} from './constants'\r\nimport {tileW} from './constants'\r\nimport {numberOfRows} from './constants'\r\nimport {numberOfCols} from './constants'\r\nimport {canvas} from './domCache'\r\n\r\n\r\n\r\nexport default class MouseEvents{\r\n  constructor(gridInstance){\r\n    this.grid = gridInstance.grid;\r\n    this.mouseMoveWrapper = (e) => this.move(e) // need to wrap the function to be able to remove the event listener\r\n    this.moveSource; \r\n    this.previousRow;\r\n    this.previousCol;\r\n  }\r\n  \r\n  down(e) {\r\n    e = e || window.event;\r\n    let x = e.pageX - canvas.offsetLeft;\r\n    let y = e.pageY - canvas.offsetTop;\r\n    \r\n    canvas.addEventListener(\"mousemove\", this.mouseMoveWrapper);\r\n\r\n    for (let row = 0; row < numberOfRows; row++) {\r\n      for (let col = 0; col < numberOfCols; col++) {\r\n        let currentTile = this.grid[row][col];\r\n        if (this.isEventTarget(currentTile, x, y)) {\r\n          if (currentTile.state === 'start') {\r\n            this.moveSource = 'start';\r\n          } else if (currentTile.state === 'finish') {\r\n            this.moveSource = 'finish';\r\n          } else {\r\n            currentTile.state = currentTile.state === 'empty' ? 'wall' : \r\n                                currentTile.state === 'wall' ? 'empty' :\r\n                                currentTile.state\r\n            currentTile.draw(currentTile.state)\r\n          }\r\n        this.previousRow = row;\r\n        this.previousCol = col;\r\n        }\r\n      }\r\n    }  \r\n  }\r\n\r\n  move (e){\r\n    e = e || window.event;\r\n    let x = e.pageX - canvas.offsetLeft;\r\n    let y = e.pageY - canvas.offsetTop;\r\n    for (let row = 0; row < numberOfRows; row++) {\r\n      for (let col = 0; col < numberOfCols; col++) {\r\n        let currentTile = this.grid[row][col];\r\n        if (this.isEventTarget(currentTile, x, y)) {\r\n          if (this.moveSource === 'start' || this.moveSource === 'finish') {\r\n            let previousTile = this.grid[this.previousRow][this.previousCol];\r\n            if (currentTile.state === 'empty') {\r\n              currentTile.state = this.moveSource\r\n              currentTile.draw(this.grid[row][col].state)\r\n              previousTile.state = 'empty';\r\n              previousTile.draw()\r\n            } else {\r\n              return\r\n            }\r\n          } else { \r\n            currentTile.state = currentTile.state === 'empty' ? 'wall' : \r\n                                currentTile.state === 'wall' ? 'empty' :\r\n                                currentTile.state\r\n            currentTile.draw(currentTile.state)\r\n          }\r\n          this.previousRow = row;\r\n          this.previousCol = col;\r\n        }\r\n      }\r\n    }  \r\n  }\r\n\r\n  up(){\r\n    this.moveSource = null;\r\n    this.previousRow = null\r\n    this.previousCol = null\r\n    canvas.removeEventListener('mousemove', this.mouseMoveWrapper)\r\n  }\r\n\r\n  \r\n  isEventTarget(tile, x, y) {\r\n    let [row, col] = [tile.row, tile.col]\r\n    return (row != this.previousRow || col != this.previousCol) \r\n           && x > col * (tileW + 1) \r\n           && x < col * (tileW + 1) + tileW \r\n           && y > row * (tileH + 1)\r\n           && y < row * (tileH + 1) + tileH\r\n  }\r\n\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/mouseEvents.js","export function disableButtons() {\r\n  let buttons = document.querySelectorAll('button');\r\n  for (let i = 0; i < buttons.length; i++) {\r\n    buttons[i].setAttribute('disabled', 'true')\r\n  }\t\r\n}\r\n\r\nexport function enableButtons() {\r\n  let buttons = document.querySelectorAll('button');\r\n  for (let i = 0; i < buttons.length; i++) {\r\n    buttons[i].removeAttribute('disabled')\r\n  }\t\r\n} \r\n\n\n\n// WEBPACK FOOTER //\n// ./js/utilityFunctions.js","//https://en.wikipedia.org/wiki/A*_search_algorithm\r\n\r\nexport default class Astar{\r\n  constructor(grid, start, finish){\r\n    this.grid = grid;\r\n    this.start = start;\r\n    this.finish = finish;\r\n    this.openList = [];\r\n    this.pathFound = false;\r\n    this.linkedList = []\r\n  }\r\n\r\n  exec(){\r\n  \tlet selectedTile, selectedTileIndex, neighbors;\r\n  \tthis.setStart();\r\n    while (this.openList.length) {\r\n      if (this.pathFound) break\r\n      [selectedTile, selectedTileIndex] = this.findTileWithLowestCost(this.openList)  \r\n      neighbors = this.grid.getNeighbors(selectedTile.row, selectedTile.col)\r\n      this.updateNeighbors(neighbors, selectedTile)\r\n      this.openList.splice(selectedTileIndex, 1); // remove current tile from the list\r\n      selectedTile.available = false; //it should not be chossen again\r\n    }\r\n    if (!this.pathFound) {\r\n      alert('Path does not exist!')\r\n    }  \r\n  }\r\n\r\n\r\n  setStart(){\r\n    this.start.initialCost = Math.abs(this.finish.row - this.start.row) + Math.abs(this.finish.col - this.start.col) // counting Manhattan distance\r\n    this.start.totalCost = this.start.initialCost;\r\n    this.start.inTheList = true;\r\n    this.openList.push(this.start)\r\n  }\r\n    \r\n\r\n  findTileWithLowestCost() {\r\n    let lowestCost, selectedTile, selectedTileIndex;\r\n    lowestCost = this.openList[0].totalCost\r\n    selectedTile = this.openList[0];\r\n    selectedTileIndex = 0;\r\n    for (let i = 0; i < this.openList.length; i++) {\r\n      if (this.openList[i].totalCost < lowestCost) {\r\n        lowestCost = this.openList[i].totalCost\r\n        selectedTile = this.openList[i];\r\n        selectedTileIndex = i;\r\n      }\r\n    }\r\n    return [selectedTile, selectedTileIndex]\r\n  }\r\n\r\n  updateNeighbors(neighbors, selectedTile){\r\n    for (let k = 0; k < neighbors.length; k++) {\r\n      let neighbor = neighbors[k]\r\n      if (neighbor.state === 'finish') {\r\n      \tthis.pathFound = true;\r\n        this.createLinkedList(selectedTile)\r\n        return\r\n      } else {\r\n        if (neighbor.totalCost === undefined) { // if the tile has not yet been visited\r\n          neighbor.parent = selectedTile; //set parent reference to be able to make a linked list later\r\n          neighbor.initialCost = Math.abs(this.finish.col - neighbor.col) + Math.abs(this.finish.row - neighbor.row) //innitial cost - Manhattan distance to the finish\r\n          neighbor.totalCost = selectedTile.accumulatedCost + neighbor.initialCost; // total cost = cost accumulated up to this point + initial cost\r\n          neighbor.accumulatedCost = selectedTile.accumulatedCost + 1 \r\n        } else if (neighbor.totalCost > selectedTile.accumulatedCost + neighbor.initialCost) { // if neighbor has been visited and current total cost is bigger than initial cost + accumulated cost\r\n          neighbor.accumulatedCost = selectedTile.accumulatedCost + 1;\r\n          neighbor.totalCost = selectedTile.accumulatedCost + neighbor.initialCost;\r\n        }\r\n        if (!neighbor.inTheList) {\r\n          neighbor.inTheList = true\r\n          this.openList.push(neighbor) \r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createLinkedList(node){\r\n    while(node.parent) {\r\n      node.state = 'path';\r\n      this.linkedList.unshift(node) //add nodes to linked list in reversed mode\r\n      node = node.parent;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n \r\n\r\n\r\n    \r\n    \r\n    \r\n   \r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/astarClass.js"],"sourceRoot":""}